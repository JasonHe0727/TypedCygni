module Program
{
	def Factorial(n: Int): Int
	{
		if (n == 0)
		{
			return 1
		}
		else
		{
			return n * Factorial(n - 1)
		}
	}

	def Add(x: Double, y: Double): Double
	{
		return x + y
	}
	
	def Multiply(x: Int, y: Int): Int
	{
        return x * y
    }
    
    def Fibonacci(n: Int): Int
    {
        if (n == 0)
        {
            return n
        }
        else if (n == 1)
        {
            return n
        }
        else
        {
            return Fibonacci(n - 1) + Fibonacci(n - 2)
        }
    }

	def Main(): Int
	{
        return new Point(10, 20).x
	}
}

module Math
{
	var Six: Int
	
    def Sum(n: Int): Int
    {
        Math.Six = 6
        var i = 1
        var sum = 0
        while (i <= n)
        {
            sum = sum + i
            i = i + 1
        }
        return sum
    }
}

class Point
{
	var x: Int
	var y: Int
	
	def Initialize(_x: Int, _y: Int): Void
	{
        x = _x
        y = _y
	}
	
	def Move(dx: Int, dy: Int): Void
	{
		x = x + dx
		y = y + dy
	}
} 
